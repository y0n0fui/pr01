<?xml version="1.0" encoding="UTF-8"?>
<!--
	Application context definition for Application.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd" > 

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition below) -->
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<!--
		Uses Apache Commons DBCP for connection pooling. See Commons DBCP documentation
		for the required JAR files. Alternatively you can use another connection pool
		such as C3P0, similarly configured using Spring.
	-->
	<!--  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
			p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}" p:username="${jdbc.username}"
			p:password="${jdbc.password}"/>-->
			
			
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean" 
		>
		 <property name="jndiName">
        		<value>java:jdbc/pp</value>
    	</property>
	</bean>			

	<!-- JNDI DataSource for JEE environments -->

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
			p:dataSource-ref="dataSource" >
		<property name="mappingResources">
            <list>
                <value>com/pp/admin/hibernate/ACtasProductos.hbm.xml</value>
				<value>com/pp/admin/hibernate/ACuentasContables.hbm.xml</value>
				<value>com/pp/admin/hibernate/CCiudad.hbm.xml</value>
				<value>com/pp/admin/hibernate/CFechaSistema.hbm.xml</value>
				<value>com/pp/admin/hibernate/CParentesco.hbm.xml</value>
				<value>com/pp/admin/hibernate/CTipoCargo.hbm.xml</value>
				<value>com/pp/admin/hibernate/CTipoIdentificacion.hbm.xml</value>
				<value>com/pp/admin/hibernate/CTipoUbicacion.hbm.xml</value>
				<value>com/pp/admin/hibernate/KAfectacionFacturas.hbm.xml</value>
				<value>com/pp/admin/hibernate/KBancosTerceros.hbm.xml</value>
				<value>com/pp/admin/hibernate/KCiclo.hbm.xml</value>
				<value>com/pp/admin/hibernate/KCiclosProyectados.hbm.xml</value>
				<value>com/pp/admin/hibernate/KColumnasInterfaces.hbm.xml</value>
				<value>com/pp/admin/hibernate/KConceptosFacturacion.hbm.xml</value>
				<value>com/pp/admin/hibernate/KCondicionesEspeciales.hbm.xml</value>
				<value>com/pp/admin/hibernate/KCorreo.hbm.xml</value>
				<value>com/pp/admin/hibernate/KDefinicionDeducciones.hbm.xml</value>
				<value>com/pp/admin/hibernate/KDefinicionInterfaces.hbm.xml</value>
				<value>com/pp/admin/hibernate/KDefinicionProductos.hbm.xml</value>
				<value>com/pp/admin/hibernate/KDescripcionRecursos.hbm.xml</value>
				<value>com/pp/admin/hibernate/KDirecciones.hbm.xml</value>
				<value>com/pp/admin/hibernate/KEmpleadosClientes.hbm.xml</value>
				<value>com/pp/admin/hibernate/KEmpresaCorreo.hbm.xml</value>
				<value>com/pp/admin/hibernate/KEmpresas.hbm.xml</value>
				<value>com/pp/admin/hibernate/KFacturacionDeducciones.hbm.xml</value>
				<value>com/pp/admin/hibernate/KFacturas.hbm.xml</value>
				<value>com/pp/admin/hibernate/KMovimientoSaldoClientes.hbm.xml</value>
				<value>com/pp/admin/hibernate/KMvtoBeneficiados.hbm.xml</value>
				<value>com/pp/admin/hibernate/KPivotCoorPro.hbm.xml</value>
				<value>com/pp/admin/hibernate/KPivotGteCuentaEmpresas.hbm.xml</value>
				<value>com/pp/admin/hibernate/KProductos.hbm.xml</value>
				<value>com/pp/admin/hibernate/KProductosDeducciones.hbm.xml</value>
				<value>com/pp/admin/hibernate/KRecursosXRoles.hbm.xml</value>
				<value>com/pp/admin/hibernate/KRoles.hbm.xml</value>
				<value>com/pp/admin/hibernate/KRolesEmpresas.hbm.xml</value>
				<value>com/pp/admin/hibernate/KSaldosXEmpresas.hbm.xml</value>
				<value>com/pp/admin/hibernate/KUsuariosEmpresas.hbm.xml</value>
				<value>com/pp/admin/hibernate/KUsuariosFunciones.hbm.xml</value>
            </list>
        </property>
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
				</entry>
			</map>
		</property>
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
			p:sessionFactory-ref="sessionFactory"/>

	<!-- Transaction manager that delegates to JTA (for a transactional JNDI DataSource) -->
	<!--
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/>
	-->


	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!--
		Activates various annotations to be detected in bean classes:
		Spring's @Required and @Autowired, as well as JSR 250's @Resource.
	-->
	<context:annotation-config/>

	<!--
		Instruct Spring to perform declarative transaction management
		automatically on annotated classes.
	-->
	<tx:annotation-driven/>

	<!--
		Exporter that exposes the Hibernate statistics service via JMX. Autodetects the
		service MBean, using its bean name as JMX object name.
	-->
	<context:mbean-export/>
	
	<bean id="userAdmin" class="com.pp.admin.facade.UserAdmin" >
	</bean>
	<bean id="paramsAdmin" class="com.pp.admin.facade.ParamsAdmin" >
	</bean>
	
	<!-- Hibernate's JMX statistics service -->
	<bean name="peoplePass:type=HibernateStatistics" class="org.hibernate.jmx.StatisticsService" autowire="byName"/>

</beans>
